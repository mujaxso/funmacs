# .github/workflows/ci.yml
name: Emacs CI (package.el)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        emacs: [29.4, 30.1]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Emacs
        uses: jcs090218/setup-emacs@master
        with:
          version: ${{ matrix.emacs }}

      - name: Cache ELPA/MELPA
        uses: actions/cache@v4
        with:
          path: |
            ~/.emacs.d/elpa
            ~/.cache/emacs
          key: elpa-${{ runner.os }}-${{ matrix.emacs }}-${{ hashFiles('**/*.el', '**/*.elc', 'early-init.el', 'init.el') }}
          restore-keys: |
            elpa-${{ runner.os }}-${{ matrix.emacs }}-
            elpa-${{ runner.os }}-

      - name: Normalize HOME and link repo as ~/.emacs.d
        run: |
          echo "HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          mkdir -p "$GITHUB_WORKSPACE/.emacs.d"
          if [ -f init.el ] || [ -f early-init.el ]; then
            rm -rf "$GITHUB_WORKSPACE/.emacs.d"
            ln -s "$GITHUB_WORKSPACE" "$GITHUB_WORKSPACE/.emacs.d"
          fi

      - name: Print Emacs version
        run: emacs --batch --eval '(princ (format "Emacs %s\n" emacs-version))'

      - name: Bootstrap package.el and load config
        env:
          CI: "true"
          NONINTERACTIVE: "true"
        run: |
          set -eu
          emacs --batch \
            --eval "(setq inhibit-startup-message t user-emacs-directory (expand-file-name \"~/.emacs.d/\"))" \
            --eval "(require 'package)" \
            --eval "(add-to-list 'package-archives '(\"melpa\" . \"https://melpa.org/packages/\") t)" \
            --eval "(add-to-list 'package-archives '(\"nongnu\" . \"https://elpa.nongnu.org/nongnu/\") t)" \
            --eval "(package-initialize)" \
            --eval "(unless package-archive-contents (package-refresh-contents))" \
            -l early-init.el \
            -l init.el

      - name: Byte-compile all lisp
        run: |
          set -eu
          emacs --batch \
            --eval "(setq byte-compile-error-on-warn t)" \
            --eval "(let* ((dir default-directory) \
                           (files (directory-files-recursively dir \"\\\\.el$\"))) \
                     (dolist (f files) \
                       (unless (string-match-p \"\\\\.dir-locals\\\\.el$\" f) \
                         (byte-compile-file f))))"

      - name: Sanity reload after compile
        run: |
          emacs --batch \
            --eval "(setq inhibit-startup-message t)" \
            -l early-init.el \
            -l init.el
